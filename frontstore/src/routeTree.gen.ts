/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WishListImport } from './routes/wish-list'
import { Route as PlatformImport } from './routes/platform'
import { Route as OrdersImport } from './routes/orders'
import { Route as IndexImport } from './routes/index'
import { Route as MyAccountIndexImport } from './routes/my-account/index'
import { Route as PaymentSuccessImport } from './routes/payment.success'
import { Route as MyAccountProfileImport } from './routes/my-account/profile'
import { Route as MyAccountOrdersImport } from './routes/my-account/orders'
import { Route as MyAccountFundsImport } from './routes/my-account/funds'
import { Route as MyAccountAddressImport } from './routes/my-account/address'
import { Route as GameGameIdImport } from './routes/game.$gameId'
import { Route as CheckoutPaymentImport } from './routes/_checkout/payment'
import { Route as CheckoutCheckoutImport } from './routes/_checkout/checkout'
import { Route as CheckoutCartImport } from './routes/_checkout/cart'

// Create/Update Routes

const WishListRoute = WishListImport.update({
  id: '/wish-list',
  path: '/wish-list',
  getParentRoute: () => rootRoute,
} as any)

const PlatformRoute = PlatformImport.update({
  id: '/platform',
  path: '/platform',
  getParentRoute: () => rootRoute,
} as any)

const OrdersRoute = OrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MyAccountIndexRoute = MyAccountIndexImport.update({
  id: '/my-account/',
  path: '/my-account/',
  getParentRoute: () => rootRoute,
} as any)

const PaymentSuccessRoute = PaymentSuccessImport.update({
  id: '/payment/success',
  path: '/payment/success',
  getParentRoute: () => rootRoute,
} as any)

const MyAccountProfileRoute = MyAccountProfileImport.update({
  id: '/my-account/profile',
  path: '/my-account/profile',
  getParentRoute: () => rootRoute,
} as any)

const MyAccountOrdersRoute = MyAccountOrdersImport.update({
  id: '/my-account/orders',
  path: '/my-account/orders',
  getParentRoute: () => rootRoute,
} as any)

const MyAccountFundsRoute = MyAccountFundsImport.update({
  id: '/my-account/funds',
  path: '/my-account/funds',
  getParentRoute: () => rootRoute,
} as any)

const MyAccountAddressRoute = MyAccountAddressImport.update({
  id: '/my-account/address',
  path: '/my-account/address',
  getParentRoute: () => rootRoute,
} as any)

const GameGameIdRoute = GameGameIdImport.update({
  id: '/game/$gameId',
  path: '/game/$gameId',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutPaymentRoute = CheckoutPaymentImport.update({
  id: '/_checkout/payment',
  path: '/payment',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutCheckoutRoute = CheckoutCheckoutImport.update({
  id: '/_checkout/checkout',
  path: '/checkout',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutCartRoute = CheckoutCartImport.update({
  id: '/_checkout/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/orders': {
      id: '/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersImport
      parentRoute: typeof rootRoute
    }
    '/platform': {
      id: '/platform'
      path: '/platform'
      fullPath: '/platform'
      preLoaderRoute: typeof PlatformImport
      parentRoute: typeof rootRoute
    }
    '/wish-list': {
      id: '/wish-list'
      path: '/wish-list'
      fullPath: '/wish-list'
      preLoaderRoute: typeof WishListImport
      parentRoute: typeof rootRoute
    }
    '/_checkout/cart': {
      id: '/_checkout/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CheckoutCartImport
      parentRoute: typeof rootRoute
    }
    '/_checkout/checkout': {
      id: '/_checkout/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutCheckoutImport
      parentRoute: typeof rootRoute
    }
    '/_checkout/payment': {
      id: '/_checkout/payment'
      path: '/payment'
      fullPath: '/payment'
      preLoaderRoute: typeof CheckoutPaymentImport
      parentRoute: typeof rootRoute
    }
    '/game/$gameId': {
      id: '/game/$gameId'
      path: '/game/$gameId'
      fullPath: '/game/$gameId'
      preLoaderRoute: typeof GameGameIdImport
      parentRoute: typeof rootRoute
    }
    '/my-account/address': {
      id: '/my-account/address'
      path: '/my-account/address'
      fullPath: '/my-account/address'
      preLoaderRoute: typeof MyAccountAddressImport
      parentRoute: typeof rootRoute
    }
    '/my-account/funds': {
      id: '/my-account/funds'
      path: '/my-account/funds'
      fullPath: '/my-account/funds'
      preLoaderRoute: typeof MyAccountFundsImport
      parentRoute: typeof rootRoute
    }
    '/my-account/orders': {
      id: '/my-account/orders'
      path: '/my-account/orders'
      fullPath: '/my-account/orders'
      preLoaderRoute: typeof MyAccountOrdersImport
      parentRoute: typeof rootRoute
    }
    '/my-account/profile': {
      id: '/my-account/profile'
      path: '/my-account/profile'
      fullPath: '/my-account/profile'
      preLoaderRoute: typeof MyAccountProfileImport
      parentRoute: typeof rootRoute
    }
    '/payment/success': {
      id: '/payment/success'
      path: '/payment/success'
      fullPath: '/payment/success'
      preLoaderRoute: typeof PaymentSuccessImport
      parentRoute: typeof rootRoute
    }
    '/my-account/': {
      id: '/my-account/'
      path: '/my-account'
      fullPath: '/my-account'
      preLoaderRoute: typeof MyAccountIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/orders': typeof OrdersRoute
  '/platform': typeof PlatformRoute
  '/wish-list': typeof WishListRoute
  '/cart': typeof CheckoutCartRoute
  '/checkout': typeof CheckoutCheckoutRoute
  '/payment': typeof CheckoutPaymentRoute
  '/game/$gameId': typeof GameGameIdRoute
  '/my-account/address': typeof MyAccountAddressRoute
  '/my-account/funds': typeof MyAccountFundsRoute
  '/my-account/orders': typeof MyAccountOrdersRoute
  '/my-account/profile': typeof MyAccountProfileRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/my-account': typeof MyAccountIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/orders': typeof OrdersRoute
  '/platform': typeof PlatformRoute
  '/wish-list': typeof WishListRoute
  '/cart': typeof CheckoutCartRoute
  '/checkout': typeof CheckoutCheckoutRoute
  '/payment': typeof CheckoutPaymentRoute
  '/game/$gameId': typeof GameGameIdRoute
  '/my-account/address': typeof MyAccountAddressRoute
  '/my-account/funds': typeof MyAccountFundsRoute
  '/my-account/orders': typeof MyAccountOrdersRoute
  '/my-account/profile': typeof MyAccountProfileRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/my-account': typeof MyAccountIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/orders': typeof OrdersRoute
  '/platform': typeof PlatformRoute
  '/wish-list': typeof WishListRoute
  '/_checkout/cart': typeof CheckoutCartRoute
  '/_checkout/checkout': typeof CheckoutCheckoutRoute
  '/_checkout/payment': typeof CheckoutPaymentRoute
  '/game/$gameId': typeof GameGameIdRoute
  '/my-account/address': typeof MyAccountAddressRoute
  '/my-account/funds': typeof MyAccountFundsRoute
  '/my-account/orders': typeof MyAccountOrdersRoute
  '/my-account/profile': typeof MyAccountProfileRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/my-account/': typeof MyAccountIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/orders'
    | '/platform'
    | '/wish-list'
    | '/cart'
    | '/checkout'
    | '/payment'
    | '/game/$gameId'
    | '/my-account/address'
    | '/my-account/funds'
    | '/my-account/orders'
    | '/my-account/profile'
    | '/payment/success'
    | '/my-account'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/orders'
    | '/platform'
    | '/wish-list'
    | '/cart'
    | '/checkout'
    | '/payment'
    | '/game/$gameId'
    | '/my-account/address'
    | '/my-account/funds'
    | '/my-account/orders'
    | '/my-account/profile'
    | '/payment/success'
    | '/my-account'
  id:
    | '__root__'
    | '/'
    | '/orders'
    | '/platform'
    | '/wish-list'
    | '/_checkout/cart'
    | '/_checkout/checkout'
    | '/_checkout/payment'
    | '/game/$gameId'
    | '/my-account/address'
    | '/my-account/funds'
    | '/my-account/orders'
    | '/my-account/profile'
    | '/payment/success'
    | '/my-account/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OrdersRoute: typeof OrdersRoute
  PlatformRoute: typeof PlatformRoute
  WishListRoute: typeof WishListRoute
  CheckoutCartRoute: typeof CheckoutCartRoute
  CheckoutCheckoutRoute: typeof CheckoutCheckoutRoute
  CheckoutPaymentRoute: typeof CheckoutPaymentRoute
  GameGameIdRoute: typeof GameGameIdRoute
  MyAccountAddressRoute: typeof MyAccountAddressRoute
  MyAccountFundsRoute: typeof MyAccountFundsRoute
  MyAccountOrdersRoute: typeof MyAccountOrdersRoute
  MyAccountProfileRoute: typeof MyAccountProfileRoute
  PaymentSuccessRoute: typeof PaymentSuccessRoute
  MyAccountIndexRoute: typeof MyAccountIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OrdersRoute: OrdersRoute,
  PlatformRoute: PlatformRoute,
  WishListRoute: WishListRoute,
  CheckoutCartRoute: CheckoutCartRoute,
  CheckoutCheckoutRoute: CheckoutCheckoutRoute,
  CheckoutPaymentRoute: CheckoutPaymentRoute,
  GameGameIdRoute: GameGameIdRoute,
  MyAccountAddressRoute: MyAccountAddressRoute,
  MyAccountFundsRoute: MyAccountFundsRoute,
  MyAccountOrdersRoute: MyAccountOrdersRoute,
  MyAccountProfileRoute: MyAccountProfileRoute,
  PaymentSuccessRoute: PaymentSuccessRoute,
  MyAccountIndexRoute: MyAccountIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/orders",
        "/platform",
        "/wish-list",
        "/_checkout/cart",
        "/_checkout/checkout",
        "/_checkout/payment",
        "/game/$gameId",
        "/my-account/address",
        "/my-account/funds",
        "/my-account/orders",
        "/my-account/profile",
        "/payment/success",
        "/my-account/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/orders": {
      "filePath": "orders.tsx"
    },
    "/platform": {
      "filePath": "platform.tsx"
    },
    "/wish-list": {
      "filePath": "wish-list.tsx"
    },
    "/_checkout/cart": {
      "filePath": "_checkout/cart.tsx"
    },
    "/_checkout/checkout": {
      "filePath": "_checkout/checkout.tsx"
    },
    "/_checkout/payment": {
      "filePath": "_checkout/payment.tsx"
    },
    "/game/$gameId": {
      "filePath": "game.$gameId.tsx"
    },
    "/my-account/address": {
      "filePath": "my-account/address.tsx"
    },
    "/my-account/funds": {
      "filePath": "my-account/funds.tsx"
    },
    "/my-account/orders": {
      "filePath": "my-account/orders.tsx"
    },
    "/my-account/profile": {
      "filePath": "my-account/profile.tsx"
    },
    "/payment/success": {
      "filePath": "payment.success.tsx"
    },
    "/my-account/": {
      "filePath": "my-account/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
